<?xml version="1.0"?>
<doc>
<assembly>
<name>
SyncSoft.CMData
</name>
</assembly>
<members>
<member name="M:SyncSoft.SQLDb.CancerDiseases.GetCancerDiseases(System.String)">
	<summary>
 Gets a disease for the supplied disease no
 </summary>
	<param name="diseaseNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.CancerDiseases.GetCancerDiseases">
	<summary>
 Returns all diseases that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.TopologySites.GetTopologySites(System.String)">
	<summary>
 Gets a Topology Sites for the supplied Topographica lNo
 </summary>
	<param name="topographicalNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.CancerDiagnosis.GetDeathCancerDiagnosis(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Gets periodic diagnosis of a patient using patients number, start and end dates
 </summary>
	<param name="PatientNo"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.CancerDiagnosis.GetDeathCancerDiagnosis(System.String)">
	<summary>
 Gets all cancer diagnosis of a patient using patients number only
 </summary>
	<param name="PatientNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Patients.GetPatientFingerprints(System.String)">
	<summary>
 Get active patients with registered fingerprints for specified patient no
 </summary>
	<param name="patientNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Patients.GetPatientFingerprints">
	<summary>
 Get active patients with registered fingerprints 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Patients.GetPatientNoByBillNo(System.String)">
	<summary>
 Returns Patient No for supplied Medical Card No
 </summary>
	<param name="billNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Patients.GetPatientNoByMemberCardNo(System.String)">
	<summary>
 Returns Patient No for supplied Member Card No
 </summary>
	<param name="MemberCardNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Patients.GetPatientBirthdays">
	<summary>
 Get all  today birthdays 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetVisits(System.String)">
	<summary>
 Returns aparticular visit
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetDoctorVisits(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all visits as per supplied visit status for the specified period
 </summary>
	<param name="visitStatusID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetDoctorVisits(System.String)">
	<summary>
 Returns all visits as per supplied visit status
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetToSeeDoctorVisits(System.String)">
	<summary>
 Returns all visits as per supplied visit status
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetTodaysVisits">
	<summary>
 Get todays visits
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetDoctorVisitsPerDoctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all visits as per doctor  for the specified period
 </summary>
	<param name="StaffNo"></param>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetWaitingVisits(System.String)">
	<summary>
 Returns today's and yesterday's visit waiting to see the logged in doctor
 </summary>
	<param name="staffLoginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetEmergencyWaitingVisits(System.String)">
	<summary>
 Returns today's and yesterday's Emergency visit waiting to see doctors
 </summary>
	<returns></returns>
</member><member name="M:SyncSoft.SQLDb.Visits.GetWaitingVisits">
	<summary>
 Returns today's and yesterday's visit waiting to see doctors
 </summary>
	<returns></returns>
</member><member name="M:SyncSoft.SQLDb.Visits.GetPendingEyeFiles(System.Boolean)">
	<summary>
 Gets recent eye visits with pending vision assessment files self requests are 
 excluded or included according to supplied hideSelfRequest
 </summary>
	<param name="hideSelfRequest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetEmergencyPendingVisitTriage(System.Boolean)">
	<summary>
 Gets recent emergency visits with pending triage  self requests are 
 excluded or included according to supplied hideSelfRequest
 </summary>
	<param name="hideSelfRequest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetPendingVisionAssessment(System.Boolean)">
	<summary>
 Gets recent visits with pending vision assessment  self requests are 
 excluded or included according to supplied hideSelfRequest
 </summary>
	<param name="hideSelfRequest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetPayingVisits(System.DateTime,System.DateTime)">
	<summary>
 Returns all paying visits as per specified visit period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetPeriodicVisits(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic visits as per specified visit period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetPeriodicInvoicedVisits(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic visits as per specified visit period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetVisitsByPatientNo(System.String)">
	<summary>
 Returns visits for aparticular patient no
 </summary>
	<param name="patientNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetVisitFingerprints">
	<summary>
 Get recent visits with registered fingerprints 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetPendingVisitFiles(System.Boolean)">
	<summary>
 Gets recent visits with pending visit files self requests are 
 excluded or included according to supplied hideSelfRequest
 </summary>
	<param name="hideSelfRequest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.GetPendingVisitTriage(System.Boolean)">
	<summary>
 Gets recent visits with pending visit triage self requests are 
 excluded or included according to supplied hideSelfRequest
 </summary>
	<param name="hideSelfRequest"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.IsVisitDateSaved(System.String,System.DateTime,System.String)">
	<summary>
 Checks to see if the sent visit for sent speciality already has a visist for that date
 </summary>
	<param name="patientNo"></param>
	<param name="visitDate"></param>
	<param name="doctorSpecialtyID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Visits.IsVisitDateSaved(System.String,System.DateTime)">
	<summary>
 Checks to see if the sent visit already has a visit for that date
 </summary>
	<param name="patientNo"></param>
	<param name="visitDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.VisionAssessment.GetVisionAssessment(System.String,System.String)">
	<summary>
 Gets a vision assessment for supplied visit no and eye test id
 </summary>
	<param name="visitNo"></param>
	<param name="eyeTestID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.VisionAssessment.GetVisionAssessment(System.String)">
	<summary>
 Gets all vision assessment for supplied visit no
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetItemsByVisitNo(System.String)">
	<summary>
 Gets Items for supplied VisitNo
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetIPDItemsByVisitNo(System.String)">
	<summary>
 Gets IPD Items for supplied VisitNo
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetDentalItems(System.String,System.String)">
	<summary>
 Gets dental items corresponding to supplied visit no and dental category
 </summary>
	<param name="visitNo"></param>
	<param name="dentalCategory"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetNotPaidItemsCASH(System.String)">
	<summary>
 Gets the not paid for Co-Pay items
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetNotPaidItems(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
	<summary>
 Returns all not paid items for the specified period and supplied company
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="companyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetNotPaidItems(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all not paid items for the specified
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetNotPaidItems(System.String,System.String,System.String)">
	<summary>
 Returns all not paid items for a specified company
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="companyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetNotPaidItems(System.String,System.String)">
	<summary>
 Returns all not paid items
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetNotPaidItemsByVisitNo(System.String)">
	<summary>
 Gets the not paid for as per supplied visit no
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetPendingItems(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all items that are pending for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetPendingItems(System.String)">
	<summary>
 Returns all items that are pending
 </summary>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetCardiologyProcessingItems(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all Cardiology items that are processing for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetCardiologyProcessingItems(System.String)">
	<summary>
 Returns all Cardiology items that are processing
 </summary>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetProcessingItems(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all items that are processing for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetProcessingItems(System.String)">
	<summary>
 Returns all items that are processing
 </summary>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetDoneItems(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all items that are done for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetDoneItems(System.String)">
	<summary>
 Returns all items that are done
 </summary>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetDoctorItems(System.String,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all items that by sent doctor for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="staffLoginID"></param>
	<param name="showOnlyPending"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetDoctorItems(System.String,System.String,System.Boolean)">
	<summary>
 Returns all items that are sent by specified doctor
 </summary>
	<param name="itemCategoryID"></param>
	<param name="staffLoginID"></param>
	<param name="showOnlyPending"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetInvoicedNotPaidItems(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all not paid items for the specified
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetInvoicedNotPaidItems(System.String,System.String,System.String)">
	<summary>
 Returns all not paid items for a specified company
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="companyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetInvoicedNotPaidItems(System.String,System.String)">
	<summary>
 Returns all not paid items
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Items.GetBillsExceedingAllocatedValue">
	<summary>
 Returns all pending payments
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetCashPayments(System.String)">
	<summary>
 Gets Cash Payments for specified receipt no
 </summary>
	<param name="receiptNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetBillFormPayment(System.String)">
	<summary>
 Gets Bill Form Payment for specified receipt no
 </summary>
	<param name="receiptNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetBillFormPayment(System.DateTime,System.DateTime,System.String,System.String)">
	<summary>
 Gets Bill Form Payment for record DateTime between start DateTime and end DateTime for aspecific login id
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="loginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetBillsPayment(System.String)">
	<summary>
 Gets Bill Payment for specified receipt no
 </summary>
	<param name="receiptNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetBillsPayment(System.DateTime,System.DateTime,System.String,System.String)">
	<summary>
 Gets Bill Payment for record DateTime between start DateTime and end DateTime for aspecific login id
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="loginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetCreditBillFormPayment(System.String)">
	<summary>
 Gets credit bill form payment for specified receipt no
 </summary>
	<param name="receiptNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetCahierLogins(System.DateTime,System.DateTime)">
	<summary>
 Gets cahier logins for record DateTime between start DateTime and end DateTime
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetCurrencySummaries(System.DateTime,System.DateTime,System.String)">
	<summary>
 Gets currency summaries payment for record DateTime between start DateTime and end DateTime and LoginID
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="loginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Payments.GetCurrencySummaries(System.DateTime,System.DateTime)">
	<summary>
 Gets currency summaries payment for record DateTime between start DateTime and end DateTime
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Refunds.GetRefunds(System.String)">
	<summary>
 Gets Refunds for specified Refund no
 </summary>
	<param name="refundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Refunds.GetRefundsWithTransDate(System.String)">
	<summary>
 Gets Refunds for specified Refund no
 </summary>
	<param name="refundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Refunds.uspGetRefundByRequestNo(System.String)">
	<summary>
 Gets Refunds for specified Refund no
 </summary>
	<param name="RefundRequestNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Quotations.GetPeriodicQuotations(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic Quotations as per specified Quotation period 
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Invoices.GetPeriodicInvoices(System.String,System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic Invoices as per specified invoice period and paytype
 </summary>
	<param name="payTypeID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Invoices.GetMemberPremiumUsageBalance(System.String)">
	<summary>
 Get Member Premium Balance
 </summary>
	<param name="MedicalCardNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Accounts.GetAccounts(System.String)">
	<summary>
 Gets Accounts for specified tran no
 </summary>
	<param name="tranNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Accounts.GetAccounts(System.DateTime,System.DateTime,System.String,System.String)">
	<summary>
 Gets Accounts for record DateTime between start DateTime and end DateTime for aspecific login id
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="loginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Accounts.GetDashboardManualDebits">
	<summary>
 Returns all Manual Debits
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Accounts.GetPatientAccountBalances">
	<summary>
 Returns all Patients
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabRequestDetails.GetPendingLabResults(System.DateTime,System.DateTime)">
	<summary>
 Gets lab results that are still pending for the supplied period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabRequestDetails.GetPendingIPDLabResults(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Gets IPD lab results that are still pending for the supplied period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabRequestDetails.GetPendingIPDLabResults">
	<summary>
 Gets all IPD lab results that are still pending
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabResults.GetLabResults(System.String,System.String,System.String)">
	<summary>
 Gets all lab results for supplied specimen no, test code and visit no
 </summary>
	<param name="specimenNo"></param>
	<param name="testCode"></param>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabResults.GetLabResults(System.String)">
	<summary>
 Gets lab results for supplied specimen no
 </summary>
	<param name="specimenNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabResults.GetLabResults(System.String,System.String)">
	<summary>
 Gets lab tests for supplied specimen no and test code
 </summary>
	<param name="specimenNo"></param>
	<param name="testCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabResults.GetLabResultsByPatientNo(System.String)">
	<summary>
 Returns lab results for aparticular patient no
 </summary>
	<param name="patientNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabResults.GetDoneLabResults(System.DateTime,System.DateTime)">
	<summary>
 Gets lab results that are done for the supplied period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabResults.GetUnApprovedLabResults(System.String)">
	<summary>
 Gets lab un approved results for supplied specimen no
 </summary>
	<param name="specimenNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabResults.GetUnApprovedDoneLabResults(System.DateTime,System.DateTime)">
	<summary>
 Gets lab results that are done and up approved for the supplied period and Status
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabResults.GetDoneSelfRequestLabResults(System.String)">
	<summary>
 Gets daily Lab Results for self requests
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.RadiologyReports.GetRadiologyReports(System.String,System.String,System.String)">
	<summary>
 Gets the radiology reports correponding to the supplied visitno, itemcode and itemcategory id.
 </summary>
	<param name="visitNo"></param>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.RadiologyReports.GetRadiologyReports(System.String)">
	<summary>
 Returns radiology reports corresponding to the supplied visit number
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.RadiologyReports.GetSelfRequestRadiologyReports(System.String)">
	<summary>
 Gets daily radiology reports for self requests
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PathologyReports.GetPathologyReports(System.String,System.String,System.String)">
	<summary>
 Gets the pathology reports correponding to the supplied visitno, itemcode and itemcategory id.
 </summary>
	<param name="visitNo"></param>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PathologyReports.GetPathologyReports(System.String)">
	<summary>
 Returns pathology reports corresponding to the supplied visit number
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDPathologyReports.GetIPDPathologyReports(System.String)">
	<summary>
 Returns pathology reports corresponding to the supplied visit number
 </summary>
	<param name="roundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.DentalReports.GetDentalReports(System.String,System.String,System.String)">
	<summary>
 Gets the dental reports correponding to the supplied visitno, itemcode and itemcategory id.
 </summary>
	<param name="visitNo"></param>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.DentalReports.GetDentalReports(System.String)">
	<summary>
 Returns dental reports corresponding to the supplied visit number
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Appointments.GetTodayAppointments(System.String)">
	<summary>
 Get to visit today appointments for supplied staff login ID
 </summary>
	<param name="staffLoginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Appointments.GetTodayAppointments">
	<summary>
 Get all to visit today appointments 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBills.GetPeriodicExtraBills(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic extra bills as per specified bill period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBills.GetExtraBillsByVisitNo(System.String)">
	<summary>
 Returns ExtraBills for aparticular Visit No
 </summary>
	<param name="VisitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBills.GetNextExtraBillID(System.String)">
	<summary>
 Gets the next extra bill ID for the supplied Visit No
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBills.GetExtraBillNo(System.String,System.Nullable{System.DateTime})">
	<summary>
 Gets extra bill No for the supplied Patient No and extra bill date
 </summary>
	<param name="patientNo"></param>
	<param name="ExtraBillDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBills.GetExtraBillNo(System.String)">
	<summary>
 Gets the latest extra bill No for the supplied Patient No
 </summary>
	<param name="patientNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetToReturnExtraBillItems(System.String,System.String)">
	<summary>
 Gets extra bill items to be returned
 </summary>
	<param name="extraBillNo"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetNotPaidExtraBillItemsCASH(System.String)">
	<summary>
 Gets the not paid for Co-Pay Extra Bill Items
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetNotPaidExtraBillItems(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
	<summary>
 Returns all not paid extra bill items for the specified period and supplied company
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="companyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetNotPaidExtraBillItems(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all not paid extra bill items for the specified
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetNotPaidExtraBillItems(System.String,System.String,System.String)">
	<summary>
 Returns all not paid Extra Bill Items for a specified company
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="companyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetNotPaidExtraBillItems(System.String,System.String)">
	<summary>
 Returns all not paid extra bill items
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetNotPaidExtraBillItemsByVisitNo(System.String)">
	<summary>
 Gets the not paid for as per supplied visit no
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetExtraBillItemsByVisitNo(System.String,System.String)">
	<summary>
 Gets all Extra Bill Items for the supplied Visit No and Pay Status ID
 </summary>
	<param name="visitNo"></param>
	<param name="payStatusID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetExtraBillItemsByVisitNo(System.String)">
	<summary>
 Gets all Extra Bill Items for the supplied Visit No
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetUniqueExtraBillItems(System.String,System.String)">
	<summary>
 returns unique extra bill items
 </summary>
	<param name="visitNo"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraBillItems.GetUniqueDrugExtraBillItems(System.String)">
	<summary>
 returns unique drug extra bill items
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ItemAdjustments.GetPendingItemAdjustments(System.String,System.String,System.Int32)">
	<summary>
 Gets all pending Returned Extra Bill Items for the supplied Visit No, ItemCategory and Days
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ItemAdjustments.GetPeriodicPendingItemAdjustments(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Gets all periodic pending Returned Items for the supplied Extrabill No, ItemCategory and Days
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ItemAdjustments.GetPendingItemAdjustmentsDetails(System.String,System.String,System.String)">
	<summary>
 Gets all pending Returned Item Details for the supplied Visit No and item Code
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ItemAdjustments.UpdateData">
	<summary>
 updates pending Returned Items for the supplied Visit No, item Code, item Category, quantity
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Claims.GetPeriodicClaims(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic claims as per specified visit period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Claims.GetWaitingPeriodicClaims(System.Int32)">
	<summary>
 Returns all Waiting periodic claims as per specified visit period
 </summary>
	<param name="claimPaymentsAlertDays"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Claims.GetClaimsByMedicalCardNo(System.String)">
	<summary>
 Returns Claims for aparticular Medical Card No
 </summary>
	<param name="medicalCardNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Claims.GetMemberPremiumBalance(System.String,System.String)">
	<summary>
 Get Member Premium Balance
 </summary>
	<param name="CompanyNo"></param>
	<param name="PatientNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ClaimDetails.GetPolicyConsumedAmount(System.String,System.String)">
	<summary>
 Gets Policy Consumed Amount
 </summary>
	<param name="medicalCardNo"></param>
	<param name="benefitCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ClaimPayments.GetPeriodicClaimsPerInsurancePerHealthUnitPerCompanyPerMedicalCardNo(System.DateTime,System.DateTime,System.String,System.String,System.String,System.String)">
	<summary>
 Returns all periodic Claims Per Insurance Per HealthUnit Per Company Per Medical CardNo as per specified visit period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="InsuranceNo"></param>
	<param name="HealthUnitCode"></param>
	<param name="CompanyNo"></param>
	<param name="MedicalCardNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ClaimPayments.GetMedicalCardNoPerInsurancePerHealthUnitPerCompany(System.DateTime,System.DateTime,System.String,System.String,System.String)">
	<summary>
 Returns Medical CardNo Per Insurance Per HealthUnit Per Company as per specified visit period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="InsuranceNo"></param>
	<param name="HealthUnitCode"></param>
	<param name="CompanyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Diagnosis.GetGeneralDeathDiagnosis(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Gets periodic diagnosis of a patient using patients number, start and end dates
 </summary>
	<param name="PatientNo"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Diagnosis.GetGeneralDeathDiagnosis(System.String)">
	<summary>
 Gets all diagnosis of a patient using patients number only
 </summary>
	<param name="PatientNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Admissions.GetInWardAdmissions(System.DateTime,System.DateTime)">
	<summary>
 Gets In Ward Admissions for the supplied period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Admissions.GetNextAdmissionID(System.String)">
	<summary>
 Gets the next Admission ID for the supplied Visit No
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Admissions.GetNextCustomAdmissionID(System.String)">
	<summary>
 Gets the Next Custom Admission ID for the supplied Visit No
 </summary>
	<param name="wardInitial"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Admissions.GetAdmissionNo(System.String,System.Nullable{System.DateTime})">
	<summary>
 Gets Admission No for the supplied Patient No and Visit Date
 </summary>
	<param name="patientNo"></param>
	<param name="visitDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Admissions.GetAdmissionNo(System.String)">
	<summary>
 Gets the latest Admission No for the supplied Patient No
 </summary>
	<param name="patientNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Admissions.GetWardInitial(System.String)">
	<summary>
 Gets Ward Initial for the supplied Ward Name
 </summary>
	<param name="wardName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDDoctor.GetIPDDoctor(System.String)">
	<summary>
 Returns IPDDoctor for aspecified roundNo
 </summary>
	<param name="roundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDDoctor.GetIPDDoctorByAdmissionNo(System.String)">
	<summary>
 Returns IPDDoctor for aspecified admission no
 </summary>
	<param name="admissionNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDDoctor.GetIPDDoctor">
	<summary>
 Returns all IPDDoctor
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDDoctor.GetIPDDoctorByAdmissionNoNavigate(System.String)">
	<summary>
 Returns IPDDoctor for aparticular admission no
 </summary>
	<param name="admissionNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDDoctor.GetIPDDoctorRounds(System.DateTime,System.DateTime)">
	<summary>
 Gets IPD Doctor Rounds for the supplied period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDVisionAssessment.GetIPDVisionAssessment(System.String,System.String)">
	<summary>
 Gets a IPD vision assessment for supplied vARRoundno and eye test id
 </summary>
	<param name="vARoundNo"></param>
	<param name="eyeTestID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDVisionAssessment.GetIPDVisionAssessment(System.String)">
	<summary>
 Gets all vision assessment for supplied VARoundno
 </summary>
	<param name="vARoundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDVisionAssessment.GetIPDVisionAssessmentWithAdmissionNo(System.String,System.String)">
	<summary>
 Gets a IPD vision assessment for supplied On admissionNo
 </summary>
	<param name="admissionNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDVisionAssessment.GetIPDVisionAssessmentWithAdmissionNo(System.String)">
	<summary>
 Gets all vision assessment for supplied AdmissionNo
 </summary>
	<param name="admissionNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDNurse.GetIPDNurseByRoundNoNavigate(System.String)">
	<summary>
 Returns IPDNurse for aparticular round no
 </summary>
	<param name="RoundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetDentalIPDItems(System.String,System.String)">
	<summary>
 Gets dental IPD items corresponding to supplied round No and dental category
 </summary>
	<param name="roundNo"></param>
	<param name="dentalCategory"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetNotPaidIPDItems(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all not paid IPDItems for the specified period
 </summary>
	<param name="billAccount"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetNotPaidIPDItems(System.String)">
	<summary>
 Returns all not paid IPDItems
 </summary>
	<param name="billAccount"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetPendingIPDItems(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all IPDItems that are pending for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetPendingIPDItems(System.String)">
	<summary>
 Returns all IPDItems that are pending
 </summary>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetProcessingIPDItems(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all IPDItems that are processing for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetProcessingIPDItems(System.String)">
	<summary>
 Returns all IPDItems that are processing
 </summary>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetDoneIPDItems(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all IPDItems that are done for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetDoneIPDItems(System.String)">
	<summary>
 Returns all IPDItems that are done
 </summary>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetDoctorIPDItems(System.String,System.String,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all IPDItems that by sent doctor for the specified period
 </summary>
	<param name="itemCategoryID"></param>
	<param name="staffLoginID"></param>
	<param name="showOnlyPending"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDItems.GetDoctorIPDItems(System.String,System.String,System.Boolean)">
	<summary>
 Returns all IPDItems that are sent by specified doctor
 </summary>
	<param name="itemCategoryID"></param>
	<param name="staffLoginID"></param>
	<param name="showOnlyPending"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDRadiologyReports.GetIPDRadiologyReports(System.String,System.String,System.String)">
	<summary>
 Gets the ipd radiology reports correponding to the supplied RoundNo, itemcode and itemcategory id.
 </summary>
	<param name="RoundNo"></param>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDRadiologyReports.GetIPDRadiologyReports(System.String)">
	<summary>
 Returns ipd radiology reports corresponding to the supplied round number
 </summary>
	<param name="RoundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDDentalReports.GetIPDDentalReports(System.String,System.String,System.String)">
	<summary>
 Gets the dental reports correponding to the supplied roundNo, itemcode and itemcategory id.
 </summary>
	<param name="roundNo"></param>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDDentalReports.GetIPDDentalReports(System.String)">
	<summary>
 Returns dental reports corresponding to the supplied roundno
 </summary>
	<param name="roundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PurchaseOrders.GetPeriodicPurchaseOrders(System.DateTime,System.DateTime,System.Boolean)">
	<summary>
 Returns periodic PurchaseOrders as per specified PurchaseOrder period, indicating wheather to include received or not
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="includeReceived"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PurchaseOrders.GetPeriodicPurchaseOrders(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic PurchaseOrders as per specified PurchaseOrder period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PurchaseOrderDetails.GetPurchaseOrderDetails(System.String,System.String)">
	<summary>
 Gets Purchase Order Details for supplied Purchase Order No and item category ID
 </summary>
	<param name="PurchaseOrderNo"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PurchaseOrderDetails.GetPurchaseOrderDetails(System.String)">
	<summary>
 Gets Purchase Order Details for supplied Purchase Order No
 </summary>
	<param name="PurchaseOrderNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.GoodsReceivedNote.GetPeriodicGoodsReceivedNote(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic GoodsReceivedNote as per specified GoodsReceivedNote period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.GoodsReceivedNote.GetUnReturnedGoodsReceivedNote(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic UnReturnedGoodsReceivedNotes as per specified GoodsReceivedNote period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.GoodsReceivedNoteDetails.GetGoodsReceivedNoteDetails(System.String,System.String)">
	<summary>
 Gets Goods Received Note Details for supplied GRN No and item category ID
 </summary>
	<param name="GRNNo"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.GoodsReceivedNoteDetails.GetGoodsReceivedNoteDetails(System.String)">
	<summary>
 Gets Goods Received Note Details for supplied GRN No
 </summary>
	<param name="GRNNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.GoodsReceivedNoteDetails.GetGoodsReceivedNoteDetailsToReturn(System.String,System.String,System.String,System.String)">
	<summary>
 Gets Goods Received Note Details for supplied GRN No, LocationID and and item category ID. These are for GRNs to be returned
 </summary>
	<param name="GRNNo"></param>
	<param name="LocationID"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.GoodsReceivedNoteDetails.GetGoodsReceivedNoteDetailsToReturn(System.String,System.String,System.String)">
	<summary>
 Gets Goods Received Note Details for supplied GRN No and LocationID.This GRN is to be returned
 </summary>
	<param name="GRNNo"></param>
	<param name="LocationID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetInventoryBalance(System.String,System.String,System.String)">
	<summary>
 Gets actual inventory balance at supllied location
 </summary>
	<param name="locationID"></param>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetInventoryBatchNo(System.String,System.String,System.String)">
	<summary>
 Gets actual inventory batchno at supllied location
 </summary>
	<param name="locationID"></param>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetInventoryExpiryDate(System.String,System.String,System.String)">
	<summary>
 Gets actual inventory Expiry Date at supllied location
 </summary>
	<param name="locationID"></param>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetInventoryBalance(System.String,System.String)">
	<summary>
 Gets actual inventory balance at all locations
 </summary>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetAvailableStock(System.String)">
	<summary>
 Gets available stock taking care of pending items that may be picked in the last 1 day
 </summary>
	<param name="drugNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetInventoryStartBalance(System.String,System.String,System.String,System.DateTime)">
	<summary>
 Gets inventory start balance at supllied location
 </summary>
	<param name="locationID"></param>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<param name="startDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetInventoryStartBalance(System.String,System.String,System.DateTime)">
	<summary>
 Gets inventory start balance at all locations
 </summary>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<param name="startDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetInventoryEndBalance(System.String,System.String,System.String,System.DateTime)">
	<summary>
 Gets inventory End balance at supllied location
 </summary>
	<param name="locationID"></param>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Inventory.GetInventoryEndBalance(System.String,System.String,System.DateTime)">
	<summary>
 Gets inventory End balance at all locations
 </summary>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryLocation.GetInventoryLocation(System.String,System.String,System.String)">
	<summary>
 Gets inventory location details at supplied location
 </summary>
	<param name="locationID"></param>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryLocation.GetInventoryLocation(System.String,System.String)">
	<summary>
 Gets inventory location details for all locations
 </summary>
	<param name="itemCategoryID"></param>
	<param name="itemCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryOrders.GetPeriodicInventoryOrders(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic InventoryOrders as per specified InventoryOrders period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryOrderDetails.GetInventoryOrderDetails(System.String,System.String)">
	<summary>
 Gets all Inventory Order Details for supplied Order no and item category ID
 </summary>
	<param name="OrderNo"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryOrderDetails.GetInventoryOrderDetails(System.String)">
	<summary>
 Gets only Issued Inventory Order Details for supplied Order no
 </summary>
	<param name="OrderNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryOrderDetails.GetPendingInventoryOrderDetails(System.String,System.DateTime,System.DateTime)">
	<summary>
 Gets pending inventory order details at supplied to location
 </summary>
	<param name="toLocationID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryOrderDetails.GetPendingInventoryOrderDetails(System.DateTime,System.DateTime)">
	<summary>
 Gets pending inventory order details for all locations
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryTransfers.GetPeriodicInventoryTransfers(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic InventoryTransfers as per specified InventoryTransfers period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryTransferDetails.GetInventoryTransferDetails(System.String,System.String)">
	<summary>
 Gets all Inventory Transfer Details for supplied transfer no and item category ID
 </summary>
	<param name="transferNo"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryTransferDetails.GetInventoryTransferDetails(System.String)">
	<summary>
 Gets only Issued Inventory Transfer Details for supplied transfer no
 </summary>
	<param name="transferNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryTransferDetails.GetIssuedInventoryTransferDetails(System.String,System.String,System.DateTime,System.DateTime)">
	<summary>
 Gets issued inventory transfer details at supplied to location
 </summary>
	<param name="toLocationID"></param>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryTransferDetails.GetIssuedInventoryTransferDetails(System.DateTime,System.DateTime)">
	<summary>
 Gets issued inventory transfer details for all locations
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InventoryAcknowledges.GetPeriodicInventoryAcknowledges(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic InventoryAcknowledges as per specified InventoryAcknowledges period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Expenditure.GetExpenditure(System.String)">
	<summary>
 Gets expenditure for specified expenditure no
 </summary>
	<param name="expenditureNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.OtherIncome.GetOtherIncome(System.String)">
	<summary>
 Gets OtherIncome for specified income no
 </summary>
	<param name="incomeNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Staff.GetStaff(System.String,System.String,System.String)">
	<summary>
 Gets staff for the supplied staff No of supplied staff tittle and doctor specialty
 </summary>
	<param name="staffNo"></param>
	<param name="staffTitleID"></param>
	<param name="doctorSpecialtyID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Staff.GetStaff(System.String)">
	<summary>
 Gets staff for the supplied staffno
 </summary>
	<param name="staffNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Staff.GetStaffByStaffTitle(System.String)">
	<summary>
 Gets staff for the supplied staff title
 </summary>
	<param name="staffTitleID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Staff.GetStaffByDoctorSpecialty(System.String,System.String)">
	<summary>
 Returns staff for aspecified staff title and doctor specialty
 </summary>
	<param name="staffTitleID"></param>
	<param name="doctorSpecialtyID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Staff.GetStaffByLoginID(System.String)">
	<summary>
 Gets staff for supplied Login ID
 </summary>
	<param name="loginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Staff.GetStaff">
	<summary>
 Gets all staff
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomers.GetBillCustomers(System.String,System.Boolean)">
	<summary>
 Gets a bill customer correponding to the supplied account number.
 Cash Account will be excluded if exclude cash account is set to true
 </summary>
	<param name="accountNo"></param>
	<param name="excludeCashAccount"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomers.GetBillCustomers(System.String)">
	<summary>
 Gets a bill customer correponding to the supplied account number.
 </summary>
	<param name="accountNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomers.GetBillCustomers(System.Boolean)">
	<summary>
 Gets all bill customers
 Cash Account will be excluded if exclude cash account is set to true
 </summary>
	<param name="excludeCashAccount"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomers.GetBillCustomers">
	<summary>
 Gets all bill customers
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomers.GetBillCustomersInsurance(System.String,System.String)">
	<summary>
 Gets all the bill customers of bill customer type insurance or by insurance no
 </summary>
	<param name="billCustomerTypeID"></param>
	<param name="insuranceNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomers.GetBillCustomersInsurance(System.String)">
	<summary>
 Gets all the bill customers of bill customer type insurance
 </summary>
	<param name="billCustomerTypeID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomers.GetBillCustomersByInsuranceNo(System.String)">
	<summary>
 Gets all the bill customers for supplied insurance no
 </summary>
	<param name="insuranceNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomFee.GetBillCustomFee(System.String,System.String,System.String)">
	<summary>
 Gets Bill custom fee corresponding to supplied item code, item category and account no
 </summary>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<param name="accountNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.BillCustomFee.GetBillCustomFee(System.String,System.String)">
	<summary>
 Gets Bill custom fee corresponding to supplied item code and item category
 </summary>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.MemberBenefits.GetMemberBenefits(System.String)">
	<summary>
 Returns member benefits for specified benefit code
 </summary>
	<param name="benefitCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.MemberBenefits.GetMemberBenefits">
	<summary>
 Gets all member benefits
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Insurances.GetInsurances(System.String)">
	<summary>
 Returns Insurance for the supplied insurance number
 </summary>
	<param name="insuranceNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Insurances.GetInsurances">
	<summary>
 Returns all Insurances that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsurancePolicies.GetInsurancePolicies(System.String)">
	<summary>
 Gets an insurance policy corresponding to agiven policy no
 </summary>
	<param name="PolicyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsurancePolicies.GetInsurancePoliciesByInsuranceNo(System.String)">
	<summary>
 Gets InsurancePolicies of agiven insurance
 </summary>
	<param name="InsuranceNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsurancePolicies.GetInsurancePolicies">
	<summary>
 gets all InsurancePolicies
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Companies.GetCompanies(System.String)">
	<summary>
 Returns a company for a given company number
 </summary>
	<param name="companyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Companies.GetCompanies">
	<summary>
 Returns all companies
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsuranceSchemes.GetInsuranceSchemes(System.String,System.String)">
	<summary>
 Gets InsuranceSchemes for supplied company no and policy no
 </summary>
	<param name="companyNo"></param>
	<param name="policyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsuranceSchemes.GetInsuranceSchemes(System.String)">
	<summary>
 Gets InsuranceSchemes for supplied insurance no
 </summary>
	<param name="insuranceNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsuranceSchemes.GetInsuranceSchemes">
	<summary>
 Gets all Insurance Schemes
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsuranceSchemes.GetInsuranceSchemesInsurances">
	<summary>
 Returns Insurances in the Insurance Schemes
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsuranceSchemes.GetInsuranceSchemesCompanies">
	<summary>
 Returns Companies in the Insurance Schemes
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsuranceSchemes.GetInsuranceSchemesPolicies">
	<summary>
 Returns Policies in the Insurance Schemes
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PolicyLimits.GetPolicyLimits(System.String,System.String)">
	<summary>
 Gets Registered policy limits
 </summary>
	<param name="companyNo"></param>
	<param name="policyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PolicyLimits.GetPolicyLimit(System.String,System.String)">
	<summary>
 Gets Policy Limit Amount
 </summary>
	<param name="medicalCardNo"></param>
	<param name="benefitCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsuranceCustomFee.GetInsuranceCustomFee(System.String,System.String,System.String)">
	<summary>
 Gets Bill custom fee corresponding to supplied item code, item category and medical card no
 </summary>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<param name="medicalCardNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.InsuranceCustomFee.GetInsuranceCustomFee(System.String,System.String)">
	<summary>
 Gets Bill custom fee corresponding to supplied item code and item category
 </summary>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.HealthUnits.GetHealthUnits(System.String)">
	<summary>
 Returns a healthUnit for aspecified healthUnitCode
 </summary>
	<param name="healthUnitCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.HealthUnits.GetHealthUnitsByDistrictsID(System.String)">
	<summary>
 Returns a healthUnit for aspecified district
 </summary>
	<param name="districtsID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.HealthUnits.GetHealthUnits">
	<summary>
 Returns all HealthUnits
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.HealthUnits.GetHealthUnitsHealthUnitCode(System.String)">
	<summary>
 Gets Health Unit Code corresponding to supplied Health Unit name
 </summary>
	<param name="healthUnitName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Counties.GetCounties(System.String)">
	<summary>
 Gets county of agiven  county code
 </summary>
	<param name="CountyCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Counties.GetCountiesByDistrictsID(System.String)">
	<summary>
 Gets counties for agiven county code
 </summary>
	<param name="districtsID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Counties.GetCounties">
	<summary>
 Gets all Counties
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.SubCounties.GetSubCounties(System.String)">
	<summary>
 Gets sub counties corresponding to the sub county code
 </summary>
	<param name="subCountyCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.SubCounties.GetSubCountiesByCountyCode(System.String)">
	<summary>
 Gets Sub Counties for agiven County
 </summary>
	<param name="countyCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.SubCounties.GetSubCounties">
	<summary>
 Gets all Sub Counties
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Parishes.GetParishes(System.String)">
	<summary>
 Gets aparish corresponding to the parish code
 </summary>
	<param name="parishCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Parishes.GetParishesBySubCountyCode(System.String)">
	<summary>
 Gets parishes for agiven sub county
 </summary>
	<param name="subCountyCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Parishes.GetParishes">
	<summary>
 Gets all parishes
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Villages.GetVillages(System.String)">
	<summary>
 Gets avillage corresponding to agiven village code
 </summary>
	<param name="villageCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Villages.GetVillagesByParishCode(System.String)">
	<summary>
 Gets villages of agiven parish
 </summary>
	<param name="parishCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Villages.GetVillages">
	<summary>
 gets all villages
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Suppliers.GetSuppliers(System.String)">
	<summary>
 Returns a Supplier for a given Supplier number
 </summary>
	<param name="supplierNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Suppliers.GetSuppliers">
	<summary>
 Returns all Suppliers
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Services.GetServices(System.String,System.String)">
	<summary>
 gets services for aparticular service code if service point is empty or
 gets all the services at aparticular service point if service code is empty
 otherwise gets all the services.
 </summary>
	<param name="serviceCode"></param>
	<param name="servicePointID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Services.GetServices(System.String)">
	<summary>
 Gets service for supplied service code
 </summary>
	<param name="serviceCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Services.GetServices">
	<summary>
 Gets all services
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Services.GetServicesAtServicePoint(System.String)">
	<summary>
 Gets all services at a particular service point
 </summary>
	<param name="servicePointID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesDrSpecialtyFee.GetServicesDrSpecialtyFee(System.String,System.String)">
	<summary>
 Gets all for services Dr. specialty fee if doctor Specialty ID is empty otherwise gets for agiven service code and doctor Specialty ID
 </summary>
	<param name="serviceCode"></param>
	<param name="doctorSpecialtyID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesDrSpecialtyFee.GetServicesDrSpecialtyFee(System.String)">
	<summary>
 returns all the services dr specialty fee, corresponding to the supplied service code
 </summary>
	<param name="serviceCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesStaffFee.GetServicesStaffFee(System.String,System.String)">
	<summary>
 Gets all for services staff fee if staff No is empty otherwise gets for agiven service code and staff No
 </summary>
	<param name="serviceCode"></param>
	<param name="staffNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesStaffFee.GetServicesStaffFee(System.String)">
	<summary>
 returns all the services staff fee, corresponding to the supplied service code
 </summary>
	<param name="serviceCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesSpecialtyBillCustomFee.GetServicesSpecialtyBillCustomFee(System.String,System.String,System.String)">
	<summary>
 Returns Doctor Speciality Bill Custom Fee for specified serviceCode, doctorSpecialty ID and accountNo
 </summary>
	<param name="serviceCode"></param>
	<param name="doctorSpecialtyID"></param>
	<param name="accountNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesSpecialtyBillCustomFee.GetServicesSpecialtyBillCustomFee(System.String)">
	<summary>
 Returns all Doctor Speciality Bill Custom Fees for specified serviceCode
 </summary>
	<param name="serviceCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesStaffBillCustomFee.GetServicesStaffBillCustomFee(System.String,System.String,System.String)">
	<summary>
 Returns Doctor Staff Bill Custom Fee for specified serviceCode, staffNo and accountNo
 </summary>
	<param name="serviceCode"></param>
	<param name="StaffNo"></param>
	<param name="accountNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesStaffBillCustomFee.GetServicesStaffBillCustomFee(System.String)">
	<summary>
 Returns all Doctor Staff Bill Custom Fee for specified serviceCode
 </summary>
	<param name="serviceCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesSpecialtyCustomCode.GetServicesSpecialtyCustomCode(System.String,System.String)">
	<summary>
 Returns Doctor Speciality Custom Code for specified serviceCode and doctorSpecialtyID
 </summary>
	<param name="serviceCode"></param>
	<param name="doctorSpecialtyID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServicesSpecialtyCustomCode.GetServicesSpecialtyCustomCode(System.String)">
	<summary>
 Returns all Doctor Speciality Custom Code for specified serviceCode
 </summary>
	<param name="serviceCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.DrugCategories.GetDrugCategories(System.String)">
	<summary>
 Returns drug categories corresponding to supplied category no
 </summary>
	<param name="categoryNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.DrugCategories.GetDrugCategories">
	<summary>
 Returns all drug categories
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.GetToOrderDrugs">
	<summary>
 Gets drugs running out of stock
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.GetToCountToOrderInventoryLocation(System.String,System.String)">
	<summary>
 Gets Items in given location
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.CountToOrderDrugs">
	<summary>
 Counts drugs running out of stock
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.CountToOrderInventoryLocation(System.String,System.String)">
	<summary>
 Counts drugs running out of stock per location
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.GetToExpireDrugs(System.Int32)">
	<summary>
 Gets drugs to expire or already expired
 </summary>
	<param name="expiryWarningDays"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.CountToExpireDrugs(System.Int32)">
	<summary>
 Counts drugs to expire or already expired
 </summary>
	<param name="expiryWarningDays"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.CountToExpireInventoryLocation(System.String,System.String,System.Int32)">
	<summary>
 Counts drugs to expire or already expired Per Location
 </summary>
	<param name="expiryWarningDays"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.GetDrugStockCard(System.DateTime,System.DateTime,System.String,System.String,System.String)">
	<summary>
 Get Drug Stock Card for apecified period and supplied drug at the supplied location ID
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="drugNo"></param>
	<param name="locationID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.GetDrugStockCard(System.DateTime,System.DateTime,System.String)">
	<summary>
 Get Drug Stock Card for apecified period and supplied drug for all locations
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="drugNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.GetDrugPeriodicInventory(System.DateTime,System.DateTime,System.String,System.String)">
	<summary>
 Get Drug Inventory summary for apecified period and supplied drug at the supplied location ID
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="locationID"></param>
	<param name="drugNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Drugs.GetDrugPeriodicInventory(System.DateTime,System.DateTime,System.String)">
	<summary>
 Gets for all drugs Inventory summary for apecified period at specified location ID
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="locationID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.GetConsumableItems(System.String)">
	<summary>
 Gets Consumable items corresponding to supplied Consumable No
 </summary>
	<param name="consumableNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.GetConsumableItems">
	<summary>
 Gets all Consumable items that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.GetToOrderConsumableItems">
	<summary>
 Gets consumable items running out of stock
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.CountToOrderConsumableItems">
	<summary>
 Counts consumable items running out of stock
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.GetToExpireConsumableItems(System.Int32)">
	<summary>
 Gets consumable items to expire or already expired
 </summary>
	<param name="expiryWarningDays"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.CountToExpireConsumableItems(System.Int32)">
	<summary>
 Counts consumable items to expire or already expired
 </summary>
	<param name="expiryWarningDays"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.GetConsumableStockCard(System.DateTime,System.DateTime,System.String,System.String,System.String)">
	<summary>
 Get Consumable Stock Card for apecified period and supplied consumable item at the supplied location ID
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="consumableNo"></param>
	<param name="locationID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.GetConsumableStockCard(System.DateTime,System.DateTime,System.String)">
	<summary>
 Get Consumable Stock Card for apecified period and supplied consumable item for all locations
 </summary>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="consumableNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.GetConsumablePeriodicInventory(System.DateTime,System.DateTime,System.String,System.String)">
	<summary>
 Get Consumable Inventory summary for apecified period and supplied Consumable at the supplied location ID
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="locationID"></param>
	<param name="consumableNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ConsumableItems.GetConsumablePeriodicInventory(System.DateTime,System.DateTime,System.String)">
	<summary>
 Gets for all consumable items Inventory summary for apecified period at specified location ID
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="locationID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Procedures.GetProcedures(System.String)">
	<summary>
 Gets a procedure for the supplied procedure code
 </summary>
	<param name="procedureCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Procedures.GetProcedures">
	<summary>
 Returns all the procedures that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.DentalServices.GetDentalServices(System.String)">
	<summary>
 Gets a dental service for the supplied dental code
 </summary>
	<param name="dentalCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.DentalServices.GetDentalServices">
	<summary>
 Returns all the dental services that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.DentalServices.GetDentalServicesByCategory(System.String)">
	<summary>
 Gets all dental services for supplied dental category
 </summary>
	<param name="dentalCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.TheatreServices.GetTheatreServices(System.String)">
	<summary>
 Gets Theatre services corresponding to supplied Theatre code
 </summary>
	<param name="theatreCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.TheatreServices.GetTheatreServices">
	<summary>
 Gets all Theatre services that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.EyeServices.GetEyeServices(System.String)">
	<summary>
 Gets eye services corresponding to supplied eye code
 </summary>
	<param name="eyeCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.EyeServices.GetEyeServices">
	<summary>
 Gets all eye services that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.OpticalServices.GetOpticalServices(System.String)">
	<summary>
 Gets Optical services corresponding to supplied Optical code
 </summary>
	<param name="OpticalCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.OpticalServices.GetOpticalServices">
	<summary>
 Gets all Optical services that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.MaternityServices.GetMaternityServices(System.String)">
	<summary>
 Gets Maternity services corresponding to supplied Maternity code
 </summary>
	<param name="MaternityCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.MaternityServices.GetMaternityServices">
	<summary>
 Gets all Maternity services that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ICUServices.GetICUServices(System.String)">
	<summary>
 Gets ICU services corresponding to supplied ICU code
 </summary>
	<param name="ICUCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ICUServices.GetICUServices">
	<summary>
 Gets all ICU services that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Diseases.GetDiseases(System.String)">
	<summary>
 Gets a disease for the supplied disease code
 </summary>
	<param name="diseaseCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Diseases.GetDiseases">
	<summary>
 Returns all diseases that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTests.GetLabTests(System.String,System.Boolean)">
	<summary>
 Returns lab tests corresponding to supplied criteria
 </summary>
	<param name="testCode"></param>
	<param name="onlyNumeric"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTests.GetLabTests(System.String)">
	<summary>
 Returns lab test corresponging to supplied test code
 </summary>
	<param name="testCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTests.GetLabTests">
	<summary>
 Returns all lab tests that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTests.GetNumericLabTests">
	<summary>
 Returns lab tests that have a numeric result value and are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTests.GetLabTestsWithSubTests">
	<summary>
 Returns all Lab Tests With SubTests that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTestsEXT.GetLabTestsEXT(System.String,System.String,System.Nullable{System.Boolean})">
	<summary>
 Gets lab tests EXTRA for supplied fields
 </summary>
	<param name="testCode"></param>
	<param name="hidden"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTestsEXT.GetLabTestsEXT(System.String,System.String)">
	<summary>
 Gets lab test extra for supplied test code and sub test code
 </summary>
	<param name="testCode"></param>
	<param name="subTestCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTestsEXT.GetLabTestsEXT(System.String,System.Nullable{System.Boolean})">
	<summary>
 Gets lab test extra for supplied fields
 </summary>
	<param name="testCode"></param>
	<param name="hidden"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.LabTestsEXT.GetLabTestsEXT(System.String)">
	<summary>
 Gets all lab tests EXTRA including hidden ones
 </summary>
	<param name="testCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.RadiologyExaminations.GetRadiologyExaminations(System.String)">
	<summary>
 Returns Radiology Examinations for the supplied exam code
 </summary>
	<param name="examCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.RadiologyExaminations.GetRadiologyExaminations">
	<summary>
 Returns all Radiology Examinations
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PathologyExaminations.GetPathologyExaminations(System.String)">
	<summary>
 Returns Pathology Examinations for the supplied exam code
 </summary>
	<param name="examCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.PathologyExaminations.GetPathologyExaminations">
	<summary>
 Returns all Pathology Examinations
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraChargeItems.GetExtraChargeItems(System.String)">
	<summary>
 Returns extra charge items for agiven extra Item Code
 </summary>
	<param name="extraItemCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExtraChargeItems.GetExtraChargeItems">
	<summary>
 Returns all extra charge items that are not hidden
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Rooms.GetRooms(System.String)">
	<summary>
 Returns a room for aspecified roomNo
 </summary>
	<param name="roomNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Rooms.GetRoomsBywardsID(System.String)">
	<summary>
 Returns a room for aspecified ward
 </summary>
	<param name="wardsID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Rooms.GetRooms">
	<summary>
 Returns all Rooms
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Beds.GetBeds(System.String)">
	<summary>
 Gets a bed corresponding to the bed no
 </summary>
	<param name="bedNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Beds.GetBedsByRoomNo(System.String)">
	<summary>
 Gets Beds for agiven room
 </summary>
	<param name="roomNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Beds.GetBeds">
	<summary>
 Gets all Beds
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Allergies.GetAllergies(System.String)">
	<summary>
 Gets Allergies for supplied allergy no
 </summary>
	<param name="allergyNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Allergies.GetAllergies">
	<summary>
 Gets all Allergies
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExchangeRates.GetExchangeRates(System.String)">
	<summary>
 Gets exchange rate for supplied currency ID
 </summary>
	<param name="currenciesID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ExchangeRates.GetExchangeRates">
	<summary>
 Gets exchange rates for all currencies
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Templates.GetTemplates(System.String)">
	<summary>
 Gets atemplate corresponding to agiven template name
 </summary>
	<param name="TemplateName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Templates.GetTemplatesByTemplateType(System.String)">
	<summary>
 Gets Templates of agiven template type
 </summary>
	<param name="TemplateTypeID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Templates.GetTemplates">
	<summary>
 Gets all Templates
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ImportDataInfo.GetExternalLabResults(System.String,System.DateTime,System.DateTime,System.String)">
	<summary>
 Returns all external lab results from source caption as per specified test date and time period like a supplied specimen no
 </summary>
	<param name="sourceCaption"></param>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<param name="specimenNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ImportDataInfo.GetExternalLabResults(System.String,System.DateTime,System.DateTime)">
	<summary>
 Returns all external lab results from source caption as per specified test date and time period
 </summary>
	<param name="sourceCaption"></param>
	<param name="startDateTime"></param>
	<param name="endDateTime"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.SmartCardAuthorisations.IsSmartCardAuthorized(System.String,System.String,System.String,System.DateTime)">
	<summary>
 Indicates wheather patient is authorised or not
 </summary>
	<param name="patientNo"></param>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<param name="toVisitDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.SmartCardAuthorisations.IsSmartCardApplicable(System.String,System.String)">
	<summary>
 Indicates wheather bill account is smart card applicable or not
 </summary>
	<param name="billModesID"></param>
	<param name="billNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Alerts.GetAlerts(System.String,System.String)">
	<summary>
 Gets all alerts of supplied alert type corresponding to the Logged in user
 </summary>
	<param name="alertTypeID"></param>
	<param name="staffLoginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Alerts.GetAlerts(System.String)">
	<summary>
 Gets all alerts of supplied alert type 
 </summary>
	<param name="alertTypeID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDAlerts.GetIPDAlerts(System.String,System.String)">
	<summary>
 Gets all IPDAlerts of supplied alert type corresponding to the Logged in user
 </summary>
	<param name="alertTypeID"></param>
	<param name="staffLoginID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDAlerts.GetIPDAlerts(System.String)">
	<summary>
 Gets all IPDAlerts of supplied alert type 
 </summary>
	<param name="alertTypeID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.Reports.GetDiagnosisReoccurances(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
	<summary>
 Returns all Diagnosis that are done more than once by a patient for the specified period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServiceInvoices.GetPeriodicServiceInvoices(System.DateTime,System.DateTime,System.Boolean)">
	<summary>
 Returns periodic ServiceInvoices as per specified ServiceInvoice period, indicating wheather to include received or not
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<param name="includeReceived"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServiceInvoices.GetPeriodicServiceInvoices(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic ServiceInvoices as per specified ServiceInvoice period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServiceInvoiceDetails.GetServiceInvoiceDetails(System.String,System.String)">
	<summary>
 Gets Purchase Order Details for supplied Purchase Order No and item category ID
 </summary>
	<param name="ServiceInvoiceNo"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.ServiceInvoiceDetails.GetServiceInvoiceDetails(System.String)">
	<summary>
 Gets Purchase Order Details for supplied Purchase Order No
 </summary>
	<param name="ServiceInvoiceNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.CardiologyExaminations.GetCardiologyExaminations(System.String)">
	<summary>
 Returns Cardiology Examinations for the supplied exam code
 </summary>
	<param name="examCode"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.CardiologyExaminations.GetCardiologyExaminations">
	<summary>
 Returns all Cardiology Examinations
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.CardiologyReports.GetCardiologyReports(System.String,System.String,System.String)">
	<summary>
 Gets the Cardiology reports correponding to the supplied visitno, itemcode and itemcategory id.
 </summary>
	<param name="visitNo"></param>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.CardiologyReports.GetCardiologyReports(System.String)">
	<summary>
 Returns Cardiology reports corresponding to the supplied visit number
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.CardiologyReports.GetSelfRequestCardiologyReports(System.String)">
	<summary>
 Gets daily Cardiology reports for self requests
 </summary>
	<param name="visitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDCardiologyReports.GetIPDCardiologyReports(System.String,System.String,System.String)">
	<summary>
 Gets the ipd Cardiology reports correponding to the supplied RoundNo, itemcode and itemcategory id.
 </summary>
	<param name="RoundNo"></param>
	<param name="itemCode"></param>
	<param name="itemCategoryID"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.IPDCardiologyReports.GetIPDCardiologyReports(System.String)">
	<summary>
 Returns ipd Cardiology reports corresponding to the supplied round number
 </summary>
	<param name="RoundNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.MaternalEnrollment.GetPeriodicMaternalEnrollment(System.DateTime,System.DateTime)">
	<summary>
 Returns all periodic visits as per specified visit period
 </summary>
	<param name="startDate"></param>
	<param name="endDate"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.AntenatalVisits.GetAntenatalVisitsByANCVisitNo(System.String)">
	<summary>
 Returns AntenatalVisits for aspecified VisitNo
 </summary>
	<param name="VisitNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.AntenatalVisits.GetAntenatalVisits">
	<summary>
 Returns all AntenatalVisits
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:SyncSoft.SQLDb.AntenatalVisits.GetAntenatalVisitsByANCNoNavigate(System.String)">
	<summary>
 Returns AntenatalVisits for aparticular ANC no
 </summary>
	<param name="ANCNo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:SyncSoft.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:SyncSoft.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:SyncSoft.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>